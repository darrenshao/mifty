#配置根Logger，其语法为：log4j.rootLogger = [ level ] , appenderName, appenderName, ...
#level 是日志记录的优先级
#appenderName就是指定日志信息输出到哪个地方,可以同时指定多个输出目的地。
log4j.rootLogger=DEBUG,stdout,R

#Log4j提供的appender有以下几种：
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

#log4j提供4种布局. 
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

#自定义格式: 【机器名称或IP】【时间】【日志级别】【系统/模块/组件名称】【进程号/线程号】【类/方法名称】【具体内容】
log4j.appender.stdout.layout.ConversionPattern=[host] %-d{yyyy-MM-dd HH:mm:ss.SSS} [%p] [%t] %l %m%n

#R 输出到文件 RollingFileAppender的扩展，可以提供一种日志的备份功能。
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=log/mifty.log
log4j.appender.R.MaxFileSize=10MB
#log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[host] %-d{yyyy-MM-dd HH:mm:ss.SSS} [%p] [%t] %l %m%n

#Print only messages of level WARN or above in the package com.foo.
#log4j.logger.com.foo=INFO

